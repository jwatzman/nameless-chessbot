- transposition table
	- does zeroing the table matter? i don't think so?
	- eviction policy: move to two-buckets, one always-replace, one current algo http://mediocrechess.sourceforge.net/guides/transpositiontables.html
		- this didn't seem to help?
	- improve replacement algo -- don't replace deep search from 1 generation ago with shallow search now
		- need to be careful testing this, search-perf invalidates the table
- improve timer
	- allow knowing the root is *almost* done and could use a little more time
- pondering
	- maybe straightforward with pthreads and manually forcing a timeup?
	- always move search into a thread so it can be interrupted?
	- need to be careful of atomic access / memory barriers
- move ordering
	- SEE
		- do we need to SEE every move or only ones MMV/LVA don't show as clear winners?
		- can we use SEE to allow more aggro futility/reverse-futility pruning?
	- return the tt move first so we don't have to SEE everything if it cuts off, or otherwise score incrementally
	- is shell sort better than selection sort?
	- delay loading history for "other" moves until time to sort, so that other moves at this ply can influence it, this is reported to be a win?
- alpha-beta
	- improve expanding aspiration window, fewer aspiration failures
	- figure out why countermove history doesn't work
	- more aggro futility pruning, rev futility pruning, null move, lmr?
- UCI?
